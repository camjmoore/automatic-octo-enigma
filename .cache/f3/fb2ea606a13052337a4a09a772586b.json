{"id":"shaders/fragmentShader.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\portfolio\\automatic-octo-enigma\\package.json","includedInParent":true,"mtime":1610397551291}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = fragmentShader;\n\nfunction fragmentShader() {\n  return \"\\n    uniform float time;\\n    uniform float progress;\\n    uniform float distanceFromCenter;\\n    uniform sampler2D texture1;\\n    uniform vec4 resolution;\\n    varying vec2 vUv;\\n    varying vec3 vposition;\\n    float PI = 3.141592653589793238;\\n    void main() {\\n        vec4 t = texture2D(texture1, vUv);\\n        float bw = (t.r + t.b + t.g)/3.;\\n        vec4 next = vec4(bw,bw,bw,1.);\\n        gl_FragColor = mix(next,t,distanceFromCenter);\\n        gl_FragColor.a = clamp(distanceFromCenter,0.2,1.);\\n    }\\n  \";\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"shaders/fragmentShader.js","original":{"line":1,"column":15}},{"name":"fragmentShader","generated":{"line":8,"column":9},"source":"shaders/fragmentShader.js","original":{"line":1,"column":24}},{"generated":{"line":8,"column":23},"source":"shaders/fragmentShader.js","original":{"line":1,"column":15}},{"generated":{"line":8,"column":26},"source":"shaders/fragmentShader.js","original":{"line":1,"column":41}},{"generated":{"line":9,"column":0},"source":"shaders/fragmentShader.js","original":{"line":2,"column":2}},{"generated":{"line":10,"column":0},"source":"shaders/fragmentShader.js","original":{"line":19,"column":1}}],"sources":{"shaders/fragmentShader.js":"export default function fragmentShader() {\r\n  return `\r\n    uniform float time;\r\n    uniform float progress;\r\n    uniform float distanceFromCenter;\r\n    uniform sampler2D texture1;\r\n    uniform vec4 resolution;\r\n    varying vec2 vUv;\r\n    varying vec3 vposition;\r\n    float PI = 3.141592653589793238;\r\n    void main() {\r\n        vec4 t = texture2D(texture1, vUv);\r\n        float bw = (t.r + t.b + t.g)/3.;\r\n        vec4 next = vec4(bw,bw,bw,1.);\r\n        gl_FragColor = mix(next,t,distanceFromCenter);\r\n        gl_FragColor.a = clamp(distanceFromCenter,0.2,1.);\r\n    }\r\n  `\r\n}"},"lineCount":null}},"error":null,"hash":"cbec89b2f2450f52b190ec81e17512e9","cacheData":{"env":{}}}